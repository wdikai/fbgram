service: fbgram

plugins:
  - serverless-finch
  - serverless-iot-local
  - serverless-dynamodb-ttl
  - serverless-dynamodb-local
  - serverless-offline
custom:
  dynamodb:
    start:
      port: 1559
      inMemory: true
      migrate: true
    ttl:
      - table: sessions
        field: tokenExpireAt
  client:
    bucketName: fbgram # (see Configuration Parameters below)
    distributionFolder: frontend/dist
    indexDocument: index.html
    errorDocument: index.html

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  login:
    handler: handlers/login.handler
    events:
      - http: 
          path: /api/login
          method: post
          cors: true

  getUsers:
    handler: handlers/getUsers.handler
    events:
      - http: 
          path: /api/users
          method: get
          cors: true
          authorizer:
            name: authorize

  postMessage:
    handler: handlers/createComment.handler
    events:
      - http: 
          path: /api/comments
          method: post
          cors: true
          authorizer:
            name: authorize

  getMessages:
    handler: handlers/getComments.handler
    events:
      - http: 
          path: /api/comments
          method: get
          cors: true
          authorizer:
            name: authorize
            
  iotPresignedUrl:
    handler: handlers/presigneIot.handler
    timeout: 30
    events:
      - http:
          path: /api/mqtt-links
          method: get 
          cors: true
          authorizer:
            name: authorize

  authorize:
    handler: handlers/authorize.handler

resources:
  Resources:
    users:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: users
    sessions:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: token
            AttributeType: S
        KeySchema:
          -
            AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: sessions
    comments:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: photoId
            AttributeType: S
          -
            AttributeName: createdAt
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          -
            KeySchema: 
              -
                AttributeName: photoId
                KeyType: HASH
              -
                AttributeName: createdAt
                KeyType: RANGE
            IndexName: photoIdIndex
            Projection: 
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: comments
